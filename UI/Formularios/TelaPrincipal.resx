<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCadCliente.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>