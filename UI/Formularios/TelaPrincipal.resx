<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCadCliente.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>