<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCadCliente.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>