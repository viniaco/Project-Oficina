<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="toolStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCadCliente.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>